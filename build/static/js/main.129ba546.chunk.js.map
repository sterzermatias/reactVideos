{"version":3,"sources":["api/index.js","components/Loading.js","components/Item.js","components/Add.js","components/Header.js","components/List.js","components/Video.js","components/Detail.js","components/About.js","components/Root.js","App.js","serviceWorker.js","index.js"],"names":["FAKE_DELAY","FAKE_DATA","id","title","url","embed","thumbnail","getVideos","Promise","resolve","reject","setTimeout","getDescription","a","fetch","resp","json","Loading","speed","this","props","typed","Typed","$loading","strings","message","typeSpeed","parseInt","el","style","opacity","last","Date","tick","window","requestAnimationFrame","fadeIn","destroy","className","ref","PureComponent","Item","data","to","src","alt","Add","state","hasError","showSending","text","handleChange","bind","handleSubmit","field","event","setState","target","value","app","length","description","e","preventDefault","newVideo","onClose","token","match","parseYoutubeUrl","validation","push","ok","then","onClick","type","onChange","minLength","maxLength","required","disabled","Component","Header","onClickAdd","console","log","List","isLoading","videos","error","showAdd","handleAdd","handleCloseAdd","reload","catch","Fragment","map","video","i","Video","width","height","frameBorder","Detail","idVideo","find","join","getVideoDetail","params","err","withRouter","Root","exact","path","component","About","App","Boolean","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.129ba546.chunk.js","sourcesContent":["const FAKE_DELAY = 2000;\nconst RICKANDMORY_API='https://rickandmortyapi.com/api/character/';\nconst FAKE_DATA = [\n\t{\t\n\t\tid:0,\n\t\ttitle:'¿Qué es CodelyTV? 🍄🔝 - Formación para programadores y divulgación del mundo del desarrollo',\n\t\turl:'https://www.youtube.com/watch?v=rpMQd2DazTc',\n\t\tembed:'https://www.youtube.com/embed/rpMQd2DazTc',\n\t\tthumbnail:'https://img.youtube.com/vi/rpMQd2DazTc/maxresdefault.jpg',\n\t},\n\t{ \t\n\t\tid:1,\n\t\ttitle:'Introducción a PHP: Cómo configurar tu entorno de desarrollo 🐘',\n\t\turl: 'https://www.youtube.com/embed/watch?v=v2IjMrpZog4',\n\t\tembed: 'https://www.youtube.com/embed/v2IjMrpZog4',\n\t\tthumbnail: 'https://img.youtube.com/vi/v2IjMrpZog4/maxresdefault.jpg',\n\t},\n\t{ \n\t\tid:2,\n\t\ttitle:'Comunicación entre microservicios: 🕋 Event-Driven Architecture',\n\t\turl: 'https://www.youtube.com/watch?v=V4mjxJ5czog',\n\t\tembed: 'https://www.youtube.com/embed/V4mjxJ5czog',\n\t\tthumbnail: 'https://img.youtube.com/vi/V4mjxJ5czog/maxresdefault.jpg',\n\t},\n\t{ \t\n\t\tid:3,\n\t\ttitle:'🤔 Cuándo usar #interfaces… y cuándo EVITARLAS',\n\t\turl: 'https://www.youtube.com/watch?v=uP1CoHtjALg',\n\t\tembed: 'https://www.youtube.com/embed/uP1CoHtjALg',\n\t\tthumbnail: 'https://img.youtube.com/vi/uP1CoHtjALg/maxresdefault.jpg',\n\t},\n\t{ \n\t\tid:4,\n\t\ttitle:'Qué es la \"Composición sobre herencia\" 👨‍👩‍👧‍👦🚔 (#CompositionOverInheritance)',\n\t\turl: 'https://www.youtube.com/watch?v=OyTPDFyGWRc',\n\t\tembed: 'https://www.youtube.com/embed/OyTPDFyGWRc',\n\t\tthumbnail: 'https://img.youtube.com/vi/OyTPDFyGWRc/maxresdefault.jpg',\n\t},\n\t{ \n\t\tid:5,\n\t\ttitle:'ReactJS vs VueJS vs Angular 6 ⚡️| 1/5 Qué aporta un framework y qué es un componente',\n\t\turl: 'https://www.youtube.com/watch?v=lttZCIin4HM',\n\t\tembed: 'https://www.youtube.com/embed/lttZCIin4HM',\n\t\tthumbnail: 'https://img.youtube.com/vi/lttZCIin4HM/maxresdefault.jpg',\n\t}\n]; \n\nexport const addVideo = (newVideo) => new Promise((resolve, reject) => {\t\n\tsetTimeout(() => { \n\t\tnewVideo.id = FAKE_DATA.length + 1;\n\t\tFAKE_DATA.push(newVideo);\n\t\treturn resolve({ok:1});\n\t},FAKE_DELAY);\n});\n \nexport const getVideos = () => new Promise((resolve, reject) => {\t\n\tsetTimeout(() => { \n\t\treturn resolve(FAKE_DATA);\n\t},FAKE_DELAY);\n});\n\nexport const getCharacters= () => new Promise((resolve, reject) => {\t\n\tgetRickAndMortyApi().then(data => { \n\t\t\tconst characters = data.results;\n\t\t\tFAKE_DATA.forEach((el,i) => {\n\t\t\t\tel.thumbnail = characters[i].image;\n\t\t\t\tel.title = \"name: \" +characters[i].name +\" status: \" +characters[i].status;\n\t\t\t})\n\t\t\treturn resolve(FAKE_DATA)\n\t\t});\n});\n\nconst getRickAndMortyApi = async () => {\n\ttry{\n\t\tconst resp = await fetch(RICKANDMORY_API);\n\t\treturn resp.json();\n\t}catch(error){\n\t\tthrow error;\n\t}\n}\n\nconst getDescription = async () => {\n\ttry{\n\t\tconst resp = await fetch('https://baconipsum.com/api/?type=all-meat&paras=3&start-with-lorem=1');\n\t\treturn resp.json();\n\t}catch(error){\n\t\tthrow error;\n\t}\n}\n\nexport const getVideoDetail = ({idVideo}) => new Promise((resolve, reject) => {\t\n\tsetTimeout(() => { \n\t\tconst video = FAKE_DATA.find((el) => parseInt(el.id) === parseInt(idVideo));\n\t\t// Something goes wrong\n\t\tif(!video) return reject({message:\"No se ha encontrado el video ;(\"});\n\t\t// All is ok\n\t\tif(video.description) return resolve(video);\n\t\t//In case video don't have text description\n\t\treturn getDescription().then(description => {\n\t\t\tvideo.description = description.join();\n\t\t\treturn resolve(video);\n\t\t}).catch(console.error);\n\t},FAKE_DELAY);\n});","import React, { PureComponent } from \"react\";\nimport PropTypes from 'prop-types';\nimport Typed from 'typed.js';\n\n\nclass Loading extends PureComponent {\n    \n    componentDidMount() {\n        const speed = this.props.speed || 90;\n        this.typed = new Typed(this.$loading, {\n          strings: [this.props.message],\n          typeSpeed: parseInt(speed)\n        });\n        fadeIn(this.$loading);\n    }\n    componentWillUnmount() {\n        this.typed.destroy();\n    }\n    render() {\n        return (<div className=\"loader\" ref={el => this.$loading = el} ></div>);\n    }\n    \n}\n\nfunction fadeIn(el) {\n    el.style.opacity = 0;\n  \n    var last = +new Date();\n    var tick = function() {\n      el.style.opacity = +el.style.opacity + (new Date() - last) / 400;\n      last = +new Date();\n  \n      if (el.style.opacity < 1) {\n        (window.requestAnimationFrame && requestAnimationFrame(tick)) || setTimeout(tick, 16);\n      }\n    };\n  \n    tick();\n  }\n\nLoading.propTypes = {\n    message: PropTypes.string.isRequired,\n    speed: PropTypes.number\n};\n\nexport default Loading;","import React, {PureComponent} from \"react\";\nimport PropTypes from 'prop-types';\nimport { Link } from \"react-router-dom\";\n\nclass Item extends PureComponent{\n\trender(){\n\t\tconst { id, thumbnail, title } = this.props.data;\n\t\treturn (<Link className=\"grid-item-link\" to={`/${id}`}>\n\t\t\t<div className=\"grid-item\" >\n\t\t\t\t<img className=\"preview-image\" src={thumbnail} alt={title}/>\n\t\t\t\t<div className=\"preview-title\">{title}</div>\n\t\t\t</div>\n\t\t</Link>);\n\t}\n}\n\nItem.propTypes = {\n\tdata: PropTypes.object.isRequired\n};\n\nexport default Item;","import React, {Component} from \"react\";\nimport { addVideo } from '../api';\nimport PropTypes from 'prop-types';\n\nconst parseYoutubeUrl = (url) => {\n    const match = url.match(/[?&]([^=#]+)=([^&#]*)/);\n    return match && match[2];\n};\n\nclass Add extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            hasError: false,\n            showSending: false,\n            title:'',\n            url: '',\n            text:''\n        }\n        this.handleChange = this.handleChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n    }\n    handleChange (field) {\n        return (event) => {\n            this.setState({\n                [field]: event.target.value\n            })    \n        }\n    }\n\n    validation(app){\n        if(app.title.length > 0 &&  app.url.length > 0 && app.description.length > 2){\n            return true;\n        } else {\n            return false;\n        }\n    }\n    handleSubmit(e){\n        e.preventDefault();\n        const { onClose } = this.props;\n        const token = parseYoutubeUrl(this.state.url || '');\n        if(this.validation(this.state) && token){\n            this.setState({showSending:true})\n            addVideo({\n                title: this.state.title,\n                description: this.state.description,\n                url: this.state.url,\n                thumbnail: `https://img.youtube.com/vi/${token}/maxresdefault.jpg`,\n                embed: `https://www.youtube.com/embed/${token}`\n            }).then(onClose(true));\n        }else{\n            this.setState({\n                hasError:true\n            });\n        }\n    }\n\n    render() {\n        const { showSending, title, url, description, hasError} = this.state;\n        const {onClose} = this.props;\n        return (<div className=\"modal\">\n              <div className=\"modal-content\">\n                <span className=\"close\" onClick={onClose(false)}>&times;</span>\n                <h2> Crear nuevo Vídeo </h2>\n                { showSending && (<span className=\"success\"> Enviando .... </span> )}\n                { hasError && (<div className=\"error\"> Some fields are empty or contain an wrong values. </div>) }\n                <form>\n                     <label>Título</label> \n                     <input type=\"text\" value={title} onChange={this.handleChange(\"title\")} minLength=\"3\" maxLength=\"200\"  required/> \n                    <label>Url</label>\n                    <input type=\"text\" value={url} onChange={this.handleChange(\"url\")} minLength=\"3\" maxLength=\"200\"  required/>\n                    <label>Descripción</label>\n                    <textarea value={description} onChange={this.handleChange(\"description\")} required/>\n                    <input type=\"submit\" onClick={this.handleSubmit} value=\"Submit\" disabled={showSending}/>\n                </form>\n              </div>\n            </div>);\n    }\n}\n\nexport default Add;\n","import React from 'react';\nimport PropTypes from 'prop-types';\n\nconst Header = ({onClickAdd}) => (\n    <div className=\"header-content\">\n\t{console.log('COMPONENTE HEADER')}\n        <div className=\"header-title-text\" >Mis vídeos favoritos</div>\n        <input type=\"button\" onClick={onClickAdd} value=\"Añadir Video\" className=\"header-button-add\"/>\n    </div>\n);\n\nHeader.propTypes = {\n    onClickAdd: PropTypes.func.isRequired\n};\n\nexport default Header;","import React, { Component } from 'react';\nimport { getVideos } from '../api';\nimport Loading from './Loading';\nimport Item from './Item';\nimport Add from './Add';\nimport Header from './Header';\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      videos: null,\n      error:null,\n      showAdd: false\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleCloseAdd = this.handleCloseAdd.bind(this);\n  }\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    \n    // Promises example  \n    // getVideos()\n    //   .then(data => this.setState({ videos: data, isLoading: false }))\n    //   .catch(error => this.setState({ error, isLoading: false }));\n    \n    try{\n      const videos = await getVideos();\n      this.setState({ videos , isLoading: false });\n    } catch(error){\n      this.setState({ error, isLoading: false });\n    }\n    return true;\n  }\n  handleAdd(e) {\n    e.preventDefault();\n    this.setState({showAdd:true});\n  }\n  handleCloseAdd(reload){\n    return () => {\n      if(reload){\n        this.setState({ isLoading: true , showAdd:false});\n        getVideos().then(data => this\n          .setState({ videos: data, isLoading: false, showAdd:false }))\n          .catch(error => this.setState({ error, isLoading: false, showAdd:false }));\n      } else {\n        this.setState({ showAdd: false });\n      }\n    }\n  }\n  render() {\n    const { videos,  isLoading, error } = this.state;\n    if (isLoading) {\n      return <Loading message=\"Cargando ...\"/>;\n    }\n    if (error) {\n      return <p className=\"error\" >{error.message}</p>;\n    }\n    return (<React.Fragment>\n        <Header onClickAdd={this.handleAdd} />\n        <div className=\"container\">\n          <div className=\"grid-container\">\n              {\n                videos && videos.map((video,i) => {\n                  return (<Item key={i} data={video}/>)\n                })\n              }\n          </div>\n        </div>\n        { this.state.showAdd && (<Add onClose={this.handleCloseAdd}/>)}\n     </React.Fragment>);\n  }\n}\n\nexport default List;","import React from \"react\";\nimport PropTypes from 'prop-types';\n\nconst Video = ({ title, embed }) => (\n    <div className=\"video-container\">\n        <iframe title={title} className=\"player\" type=\"text/html\" width=\"100%\" height=\"400px\"\n            src={embed}\n        frameBorder=\"0\"/>\n    </div>\n);\n\nVideo.propTypes = {\n    name: PropTypes.string.isRequired,\n    embed: PropTypes.string.isRequired\n};\n\nexport default Video;\n","import React, {Component} from 'react';\nimport { withRouter } from 'react-router'\nimport { getVideoDetail } from '../api';\nimport Loading from './Loading';\nimport Video from './Video';\n\nclass Detail extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: true\n    };\n  }\n  componentDidMount() {\n    const { match } = this.props;\n    this.setState({ isLoading: true });\n    getVideoDetail({ idVideo: match.params.id })\n    .then(data => this.setState({ video: data, isLoading: false }))\n    .catch(err => this.setState({ error:err, isLoading: false }));\n  }\n  render() {\n    const { isLoading, error, video } = this.state;\n    const { match } = this.props;\n   \n    if (error) return <p className=\"error\">{error.message}</p>;\n    if (isLoading) return <Loading message={`Cargando video (#${match.params.id}) .... `} speed={15}/>;\n\n    return (<React.Fragment>\n        <div className=\"detail-container\">\n            <Video title={video.title} embed={video.embed}/>\n            <div className=\"detail-summary\">\n              <h2 className=\"detail-title\">{video.title}</h2>\n              <p>{video.description}</p>\n            </div>\n        </div>\n     </React.Fragment>);\n  }\n}\n\nexport default  withRouter(Detail);","import React, {Component} from 'react';\nimport { withRouter } from 'react-router'\n\n\n\nconst About = () =>(\n    <div className=\"header-content\">\n        <div className=\"header-title-text\"> \n            Acerca de nosotros\n        </div>\n        <p> Hola, probando</p>\n    </div>\n)\nexport default withRouter(About);","import React from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom'\nimport List from './List';\nimport Detail from './Detail';\nimport About from './About';\n\nconst Root = () => (\n\t<BrowserRouter>\n\t\t<Switch>\n\t\t\t<div>\n\t\t\t<Route exact path=\"/\" component={List}/>\n\t\t\t<Route exact path=\"/:id\" component={Detail}/>\n\t\t\t<Route exact path=\"/about\" component={About}/>\n\t\t\t</div>\n\t\t</Switch>\n\t</BrowserRouter>\n);\n\nexport default Root;","import React, { Component } from 'react';\nimport Root from './components/Root';\n\nclass App extends Component {\n  render() {\n    return (<Root/>);\n  }\n}\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n    window.location.hostname === 'localhost' ||\n      // [::1] is the IPv6 localhost address.\n      window.location.hostname === '[::1]' ||\n      // 127.0.0.1/8 is considered localhost for IPv4.\n      window.location.hostname.match(\n        /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n      )\n  );\n  \n  export function register(config) {\n    if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n      // The URL constructor is available in all browsers that support SW.\n      const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n      if (publicUrl.origin !== window.location.origin) {\n        // Our service worker won't work if PUBLIC_URL is on a different origin\n        // from what our page is served on. This might happen if a CDN is used to\n        // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n        return;\n      }\n  \n      window.addEventListener('load', () => {\n        const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n  \n        if (isLocalhost) {\n          // This is running on localhost. Let's check if a service worker still exists or not.\n          checkValidServiceWorker(swUrl, config);\n  \n          // Add some additional logging to localhost, pointing developers to the\n          // service worker/PWA documentation.\n          navigator.serviceWorker.ready.then(() => {\n            console.log(\n              'This web app is being served cache-first by a service ' +\n                'worker. To learn more, visit http://bit.ly/CRA-PWA'\n            );\n          });\n        } else {\n          // Is not localhost. Just register service worker\n          registerValidSW(swUrl, config);\n        }\n      });\n    }\n  }\n  \n  function registerValidSW(swUrl, config) {\n    navigator.serviceWorker\n      .register(swUrl)\n      .then(registration => {\n        registration.onupdatefound = () => {\n          const installingWorker = registration.installing;\n          if (installingWorker == null) {\n            return;\n          }\n          installingWorker.onstatechange = () => {\n            if (installingWorker.state === 'installed') {\n              if (navigator.serviceWorker.controller) {\n                // At this point, the updated precached content has been fetched,\n                // but the previous service worker will still serve the older\n                // content until all client tabs are closed.\n                console.log(\n                  'New content is available and will be used when all ' +\n                    'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n                );\n  \n                // Execute callback\n                if (config && config.onUpdate) {\n                  config.onUpdate(registration);\n                }\n              } else {\n                // At this point, everything has been precached.\n                // It's the perfect time to display a\n                // \"Content is cached for offline use.\" message.\n                console.log('Content is cached for offline use.');\n  \n                // Execute callback\n                if (config && config.onSuccess) {\n                  config.onSuccess(registration);\n                }\n              }\n            }\n          };\n        };\n      })\n      .catch(error => {\n        console.error('Error during service worker registration:', error);\n      });\n  }\n  \n  function checkValidServiceWorker(swUrl, config) {\n    // Check if the service worker can be found. If it can't reload the page.\n    fetch(swUrl)\n      .then(response => {\n        // Ensure service worker exists, and that we really are getting a JS file.\n        const contentType = response.headers.get('content-type');\n        if (\n          response.status === 404 ||\n          (contentType != null && contentType.indexOf('javascript') === -1)\n        ) {\n          // No service worker found. Probably a different app. Reload the page.\n          navigator.serviceWorker.ready.then(registration => {\n            registration.unregister().then(() => {\n              window.location.reload();\n            });\n          });\n        } else {\n          // Service worker found. Proceed as normal.\n          registerValidSW(swUrl, config);\n        }\n      })\n      .catch(() => {\n        console.log(\n          'No internet connection found. App is running in offline mode.'\n        );\n      });\n  }\n  \n  export function unregister() {\n    if ('serviceWorker' in navigator) {\n      navigator.serviceWorker.ready.then(registration => {\n        registration.unregister();\n      });\n    }\n  }\n  ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}