{"ast":null,"code":"var _jsxFileName = \"/home/chichen/Documentos/repo/reactPracticas/video-favourites/src/components/List.js\";\nimport React, { Component } from 'react';\nimport { getVideos } from '../api';\nimport Loading from './Loading';\nimport Item from './Item';\nimport Add from './Add';\nimport Header from './Header';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      videos: null,\n      error: null,\n      showAdd: false\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleCloseAdd = this.handleCloseAdd.bind(this);\n  }\n\n  async componentDidMount() {\n    this.setState({\n      isLoading: true\n    }); // Promises example  \n    // getVideos()\n    //   .then(data => this.setState({ videos: data, isLoading: false }))\n    //   .catch(error => this.setState({ error, isLoading: false }));\n\n    try {\n      const videos = await getVideos();\n      this.setState({\n        videos,\n        isLoading: false\n      });\n    } catch (error) {\n      this.setState({\n        error,\n        isLoading: false\n      });\n    }\n\n    return true;\n  }\n\n  handleAdd(e) {\n    e.preventDefault();\n    this.setState({\n      showAdd: true\n    });\n  }\n\n  handleCloseAdd(reload) {\n    return () => {\n      if (reload) {\n        this.setState({\n          isLoading: true,\n          showAdd: false\n        });\n        getVideos().then(data => this.setState({\n          videos: data,\n          isLoading: false,\n          showAdd: false\n        })).catch(error => this.setState({\n          error,\n          isLoading: false,\n          showAdd: false\n        }));\n      } else {\n        this.setState({\n          showAdd: false\n        });\n      }\n    };\n  }\n\n  render() {\n    const {\n      videos,\n      isLoading,\n      error\n    } = this.state;\n\n    if (isLoading) {\n      return /*#__PURE__*/_jsxDEV(Loading, {\n        message: \"Cargando ...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 14\n      }, this);\n    }\n\n    if (error) {\n      return /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"error\",\n        children: error.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 14\n      }, this);\n    }\n\n    return /*#__PURE__*/_jsxDEV(React.Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        onClickAdd: this.handleAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"container\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"grid-container\",\n          children: videos && videos.map((video, i) => {\n            return /*#__PURE__*/_jsxDEV(Item, {\n              data: video\n            }, i, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 27\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), this.state.showAdd && /*#__PURE__*/_jsxDEV(Add, {\n        onClose: this.handleCloseAdd\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 34\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default List;","map":{"version":3,"sources":["/home/chichen/Documentos/repo/reactPracticas/video-favourites/src/components/List.js"],"names":["React","Component","getVideos","Loading","Item","Add","Header","List","constructor","props","state","isLoading","videos","error","showAdd","handleAdd","bind","handleCloseAdd","componentDidMount","setState","e","preventDefault","reload","then","data","catch","render","message","map","video","i"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { getVideos } from '../api';\nimport Loading from './Loading';\nimport Item from './Item';\nimport Add from './Add';\nimport Header from './Header';\nclass List extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoading: false,\n      videos: null,\n      error:null,\n      showAdd: false\n    };\n    this.handleAdd = this.handleAdd.bind(this);\n    this.handleCloseAdd = this.handleCloseAdd.bind(this);\n  }\n  async componentDidMount() {\n    this.setState({ isLoading: true });\n    \n    // Promises example  \n    // getVideos()\n    //   .then(data => this.setState({ videos: data, isLoading: false }))\n    //   .catch(error => this.setState({ error, isLoading: false }));\n    \n    try{\n      const videos = await getVideos();\n      this.setState({ videos , isLoading: false });\n    } catch(error){\n      this.setState({ error, isLoading: false });\n    }\n    return true;\n  }\n  handleAdd(e) {\n    e.preventDefault();\n    this.setState({showAdd:true});\n  }\n  handleCloseAdd(reload){\n    return () => {\n      if(reload){\n        this.setState({ isLoading: true , showAdd:false});\n        getVideos().then(data => this\n          .setState({ videos: data, isLoading: false, showAdd:false }))\n          .catch(error => this.setState({ error, isLoading: false, showAdd:false }));\n      } else {\n        this.setState({ showAdd: false });\n      }\n    }\n  }\n  render() {\n    const { videos,  isLoading, error } = this.state;\n    if (isLoading) {\n      return <Loading message=\"Cargando ...\"/>;\n    }\n    if (error) {\n      return <p className=\"error\" >{error.message}</p>;\n    }\n    return (<React.Fragment>\n        <Header onClickAdd={this.handleAdd} />\n        <div className=\"container\">\n          <div className=\"grid-container\">\n              {\n                videos && videos.map((video,i) => {\n                  return (<Item key={i} data={video}/>)\n                })\n              }\n          </div>\n        </div>\n        { this.state.showAdd && (<Add onClose={this.handleCloseAdd}/>)}\n     </React.Fragment>);\n  }\n}\n\nexport default List;"]},"metadata":{},"sourceType":"module"}